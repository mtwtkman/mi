#!/bin/bash
# COMPOAT
osname="$(uname -o | tr "[:upper:]" "[:lower:]")"
declare -a candidates=("linux" "darwin")
for o in "${candidates[@]}"
do
  if [[ "${osname}" =~ "${o}" ]]; then
    ostype="${o}"
    break
  fi
done

case "${ostype}" in
  android|linux)
    export MI_ABSPATH_GETTER="readlink -m"
    export MI_ECHO_ASCII_CHARA="echo -e"
    ;;
  darwin)
    export MI_ABSPATH_GETTER="readlink -f"
    export MI_ECHO_ASCII_CHARA="echo"
    ;;
  *)
    echo "Cannot detect os type"
    exit 1
esac

here="$(eval "${MI_ABSPATH_GETTER} $(dirname ${BASH_SOURCE[0]})")"

source "${here}/modules/message.sh"

bash "${here}/modules/prepare.sh"

distro="${DISTRO:-autodetect}"

function fetch_os_name_from_os_release()
{
  IFS="=" read -ra value <<< $(grep '^NAME' /etc/os-release | tr "[:upper:]" "[:lower:]")
  echo "${value[1]}"
}

if [ "${distro}" = "autodetect" ]; then
  if [ -e "/etc/os-release" ]; then
    distro="$(fetch_os_name_from_os_release)"
  elif [ $(command -v sw_vers) > /dev/null ]; then
    distro="macos"
  elif [ "${ostype}" = "Android" ]; then
    distro="termux"
  fi
  if [ -z "${distro}" ]; then
    red "Cannot detected OS name."
    exit 1
  fi
fi

cmd=""

case "${distro}" in
  *arch*) cmd="${here}/distro/arch.sh";;
  *macos*) cmd="${here}/distro/macos.sh";;
  *debian*|*ubuntu*) cmd="${here}/distro/debian.sh";;
  *termux*) cmd="${here}/distro/termux.sh";;
  *)
    red "No definition for ${distro}."
    exit 0
    ;;
esac

if [ -z "${cmd}" ]; then
  red "Unknown distro ${distro}"
  exit 1
fi

sh "${cmd}" $@
unset MI_ABSPATH_GETTER
unset MI_ECHO_ASCII_CHARA
